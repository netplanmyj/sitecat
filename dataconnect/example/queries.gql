mutation AddWatchEntry($movieId: UUID!, $watchDate: Date!, $location: String) @auth(level: USER) {
  watch_insert(data: {
    movieId: $movieId,
    userId_expr: "auth.uid",
    watchDate: $watchDate,
    location: $location
  })
}

query GetPublicMovieLists @auth(level: PUBLIC, insecureReason: "This operation is safe to expose to the public") {
  movieLists(where: {isPublic: {eq: true}}) {
    id
    name
    description
    createdAt
    updatedAt
  }
}

query GetMyMovieLists @auth(level: USER) {
  movieLists(where: {userId: {eq_expr: "auth.uid"}}) {
    id
    name
    description
    createdAt
    updatedAt
  }
}

mutation CreateMovieList($name: String!, $description: String!, $isPublic: Boolean!) @auth(level: USER) {
  movieList_insert(data: {
    name: $name,
    description: $description,
    isPublic: $isPublic,
    userId_expr: "auth.uid",
    createdAt_expr: "request.time",
    updatedAt_expr: "request.time"
  })
}